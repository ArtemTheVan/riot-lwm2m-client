# name of your application
APPLICATION = lwm2m-client

# If no BOARD is found in the environment, use this default:
BOARD ?= native

# This has to be the absolute path to the RIOT base directory:
RIOTBASE ?= $(CURDIR)/../RIOT

# use ethos (ethernet over serial) for network communication and stdio over
# UART, but not on native, as native has a tap interface towards the host.
ifeq (,$(filter native,$(BOARD)))
  GNRC_NETIF_NUMOF := 1
  USEMODULE += stdio_ethos

  # ethos baudrate can be configured from make command
  ETHOS_BAUDRATE ?= 115200
  CFLAGS += -DETHOS_BAUDRATE=$(ETHOS_BAUDRATE)
else
  GNRC_NETIF_NUMOF := 1
  TERMFLAGS += -z [::1]:17754
  USEMODULE += socket_zep
endif

# Include packages that pull up and auto-init the link layer.
# NOTE: 6LoWPAN will be included if IEEE802.15.4 devices are present
#USEMODULE += gnrc_netdev_default
USEMODULE += auto_init_gnrc_netif
# Specify the mandatory networking modules for 6LoWPAN border router
USEMODULE += gnrc_ipv6
USEMODULE += gnrc_icmpv6
USEMODULE += gnrc_sock_udp
# Additional networking modules that can be dropped if not needed
USEMODULE += gnrc_icmpv6_echo
USEMODULE += gcoap
# Add also the shell, some shell commands
USEMODULE += shell
USEMODULE += shell_commands
USEMODULE += ps
# Include and auto-initialize all available sensors
ifneq (native,$(BOARD))
  USEMODULE += saul_default
endif

# Comment this out to disable code in RIOT that does safety checking
# which is not needed in a production environment but helps in the
# development process:
DEVELHELP ?= 1

TAP ?= tap0
IPV6_PREFIX ?= fd00:dead:beef::/64

# Specific the server address
SERVER_ADDR ?= '"fd00:dead:beef::1"'

ifneq (,$(SERVER_ADDR))
  CFLAGS += -DLWM2M_SERVER_ADDR=$(SERVER_ADDR)
endif

CFLAGS += -DTHREAD_PRIORITY_MAIN=10

# SAUL driver that measures temperature; hardware dependent
SAUL_DRIVER ?= jc42
ifneq (native,$(BOARD))
  USEMODULE += $(SAUL_DRIVER)
  CFLAGS += -DSAUL_INFO_DRIVER='"$(SAUL_DRIVER)"'
else
  CFLAGS += -DSAUL_INFO_DRIVER=NULL
endif

# We override the `make term` command to use ethos
TERMPROG ?= sudo sh ./setup_ula.sh
TERMFLAGS ?= $(PORT) $(TAP) $(IPV6_PREFIX)

# We depend on the ethos host tools to run the border router, we build them
# if necessary
TERMDEPS += host-tools

include $(RIOTBASE)/Makefile.include

.PHONY: host-tools

host-tools:
	$(Q)env -u CC -u CFLAGS make -C $(RIOTTOOLS)

